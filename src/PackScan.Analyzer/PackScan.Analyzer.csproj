<Project Sdk="Microsoft.NET.Sdk">

  <Import Project="..\PackScan.Shared\PackScan.Shared.projitems" Label="Shared" />

  <Import Project="../NuGet.Metadata.props" />

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
    <BuildOutputTargetFolder>analyzers/dotnet/cs</BuildOutputTargetFolder>
    <DevelopmentDependency>true</DevelopmentDependency>
    <IsRoslynComponent>true</IsRoslynComponent>
    <NoWarn>$(NoWarn);NU5128</NoWarn>
    <DefineConstants>$(DefineConstants);PackScan_Analyzer</DefineConstants>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
  </PropertyGroup>

  <ItemGroup>
    <Content Include="PackScan.Analyzer.props" PackagePath="build\$(PackageId).props" />
    <Content Include="PackScan.Analyzer.targets" PackagePath="build\$(PackageId).targets" />

    <Content Include="..\PackScan.Defaults\PackScan.Defaults.props" PackagePath="build\%(Filename)%(Extension)" Visible="False" Pack="true" />
    <Content Include="..\PackScan.Defaults\PackScan.Defaults.targets" PackagePath="build\%(Filename)%(Extension)" Visible="False" Pack="true" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Bcl.HashCode" Version="1.1.1" PrivateAssets="all" />
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.4" PrivateAssets="all" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.5.0" PrivateAssets="all" />
    <PackageReference Include="IsExternalInit" Version="1.0.3" PrivateAssets="all" />
    <PackageReference Include="NuGet.Packaging" Version="6.5.0" PrivateAssets="all" />
    <PackageReference Include="Nullable" Version="1.3.1" PrivateAssets="all" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\PackScan.PackagesProvider.Abstractions\PackScan.PackagesProvider.Abstractions.csproj" PrivateAssets="all" />
    <ProjectReference Include="..\PackScan.PackagesProvider.Generator\PackScan.PackagesProvider.Generator.csproj" PrivateAssets="all" />
    <ProjectReference Include="..\PackScan.PackagesReader\PackScan.PackagesReader.csproj" PrivateAssets="all" />
  </ItemGroup>

  <!-- Embed referenced dlls so that they can be loaded at runtime  -->
  <Target Name="EmbedReferencedAssemblies" AfterTargets="ResolveAssemblyReferences">

    <!-- https://nietras.com/2020/10/01/automatically-embed-copy-local-assemblies/ -->

    <!-- Collect all dependent assemblies -->
    <ItemGroup>
      <FilesToEmbed Include="..\PackScan.PackagesProvider.Abstractions\bin\$(Configuration)\*.dll" />
      <FilesToEmbed Include="..\PackScan.PackagesProvider.Generator\bin\$(Configuration)\*.dll" />
      <FilesToEmbed Include="..\PackScan.PackagesReader\bin\$(Configuration)\*.dll" />
    </ItemGroup>

    <!-- Remove duplicates by file name -->
    <ItemGroup>
      <FilesToEmbedByName Include="%(FilesToEmbed.FileName)" FilePath="%(Identity)" />
    </ItemGroup>

    <RemoveDuplicates Inputs="@(FilesToEmbedByName)">
      <Output TaskParameter="Filtered" ItemName="FilteredFilesToEmbed" />
    </RemoveDuplicates>

    <ItemGroup>
      <FilesToEmbed Remove="@(FilesToEmbed)" />
      <FilesToEmbed Include="@(FilteredFilesToEmbed->'%(FilePath)')" />
    </ItemGroup>

    <!-- Add filtered files as embedded resource -->
    <ItemGroup>
      <EmbeddedResource Include="@(FilesToEmbed)">
        <LogicalName>%(FilesToEmbed.DestinationSubDirectory)%(FilesToEmbed.Filename)%(FilesToEmbed.Extension)</LogicalName>
      </EmbeddedResource>
    </ItemGroup>
  </Target>

</Project>

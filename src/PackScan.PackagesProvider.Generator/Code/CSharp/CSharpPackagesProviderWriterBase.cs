using PackScan.PackagesProvider.Generator.Code.Documentation;
using PackScan.PackagesProvider.Generator.Info;

using static CodegenCS.Symbols;

namespace PackScan.PackagesProvider.Generator.Code.CSharp;

internal abstract partial class CSharpPackagesProviderWriterBase : PackagesProviderWriterBase
{
    protected string? QM => NullableAnnotations ? "?" : null;
    protected string Access => Public ? "public" : "internal";
    protected FormattableStringFactory Create { get; }

    protected CSharpPackagesProviderWriterBase(IDocumentationReaderFactory docReaderFactory, PackagesProviderWriterOptions options)
        : base(docReaderFactory, options)
    {
        Create = new FormattableStringFactory(this);
    }

    protected FormattableString CreateFile(FileContent content)
    {
        string nullable = $"#nullable {(NullableAnnotations ? "enable annotations" : "disable")}";

        if (string.IsNullOrEmpty(Namespace))
        {
            return $$"""
                {{GetAutoGeneratedComment()}}

                {{nullable}}
                {{IF(content.BeforeNamespace is not null)}}
                {{content.BeforeNamespace}}
                {{ENDIF}}
                {{TLW}}

                {{content.InNamespace}}
                """;
        }

        return $$"""
            {{GetAutoGeneratedComment()}}

            {{nullable}}
            {{IF(content.BeforeNamespace is not null)}}
            {{content.BeforeNamespace}}
            {{ENDIF}}
            {{TLW}}

            namespace {{Namespace}}
            {
                {{content.InNamespace}}
            }
            """;
    }

    protected sealed override void ApplyDocumentationComment(string[] documentationLines)
    {
        for (int i = 0; i < documentationLines.Length; i++)
            documentationLines[i] = $"/// {documentationLines[i]}";
    }

    protected override FormattableString CreateAutoGeneratedComment(ProductInfo? productInfo)
    {
        return $"""
            //------------------------------------------------------------------------------
            // <auto-generated>
            //     This code was generated by a tool.
            {TLW}{IF(productInfo is not null)}
            //
            //     Tool: {productInfo?.Title}
            //     Author: {productInfo?.Author}
            //     Version: {productInfo?.Version}
            //     Repository Url: {productInfo?.RepositoryUrl}
            {TLW}{ENDIF}
            //
            //     Changes to this file may cause incorrect behavior and will be lost if
            //     the code is regenerated.
            // </auto-generated>
            //------------------------------------------------------------------------------
            """;
    }

    protected readonly struct FileContent
    {
        public FormattableString? BeforeNamespace { get; init; }
        public FormattableString? InNamespace { get; init; }
    }
}
